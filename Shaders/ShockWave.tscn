[gd_scene load_steps=3 format=3 uid="uid://c4ofme5aqmxny"]

[sub_resource type="Shader" id="Shader_sn7bd"]
code = "shader_type canvas_item;

uniform vec2 real_center; // A posição do centro deve ser passada pelo script
uniform float force = 0.2;
uniform sampler2D SCREEN_TEXTURE: hint_screen_texture;
uniform float size = 0.3;
uniform float thickness = 0.1;
uniform float small_smooth_val = 0.1;

void fragment() {
    vec2 center = real_center; // Usando a posição passada
	//vec2 center = -1.0 + 2.0 * UV / (1.0 / TEXTURE_PIXEL_SIZE);
    float ratio = SCREEN_PIXEL_SIZE.x / SCREEN_PIXEL_SIZE.y;
    vec2 scaledUV = (SCREEN_UV - vec2(0.5, 0.0)) / vec2(ratio, 1.0) + vec2(0.5, 0.0);
    
    float mask = (1.0 - smoothstep(size - thickness, size, length(scaledUV - center)));
    mask *= smoothstep(size - thickness - small_smooth_val, size - thickness, length(scaledUV - center));
    
    vec2 disp = normalize(scaledUV - center) * force * mask;
    COLOR = texture(SCREEN_TEXTURE, UV - disp);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0w67f"]
shader = SubResource("Shader_sn7bd")
shader_parameter/real_center = Vector2(0.5, 0.5)
shader_parameter/force = 0.2
shader_parameter/size = 0.3
shader_parameter/thickness = 0.1
shader_parameter/small_smooth_val = 0.1

[node name="ColorRect" type="ColorRect"]
material = SubResource("ShaderMaterial_0w67f")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
